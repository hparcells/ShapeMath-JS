{
    "docs": [
        {
            "location": "/",
            "text": "Shape Math JS Documentation\n\u00b6\n\n\nA JavaScript Library of Math Functions for 2D and 3D Shapes.\n\n\nInstalling\n\u00b6\n\n\n\n\nRun \nnpm install shapemath-js\n.\n\n\nRequire the Package Using \nconst shapemath = require(\"shapemath-js\");\n.\n\n\n\n\nCompleted Project\n\u00b6\n\n\nThe completed status of this project means I will not be actively developing this, other than small bug fixes, and responding to pull requests and issues represented by the maintained badge. You can feel free to open a pull request with new features if you choose to do so.",
            "title": "Home"
        },
        {
            "location": "/#shape-math-js-documentation",
            "text": "A JavaScript Library of Math Functions for 2D and 3D Shapes.",
            "title": "Shape Math JS Documentation"
        },
        {
            "location": "/#installing",
            "text": "Run  npm install shapemath-js .  Require the Package Using  const shapemath = require(\"shapemath-js\"); .",
            "title": "Installing"
        },
        {
            "location": "/#completed-project",
            "text": "The completed status of this project means I will not be actively developing this, other than small bug fixes, and responding to pull requests and issues represented by the maintained badge. You can feel free to open a pull request with new features if you choose to do so.",
            "title": "Completed Project"
        },
        {
            "location": "/2d/circle/",
            "text": "Circle\n\u00b6\n\n\nFinding the Area By The Radius\n\u00b6\n\n\nvar\n \nshapemathjs\n \n=\n \nrequire\n(\n\"shapemath-js\"\n);\n\n\n\nshapemathjs\n.\ncircle\n.\nareaByRadius\n(\nradius\n);\n\n\n\n\n\n\n\n\nradius\n: The radius of the circle.\n\n\n\n\nReturns the area.\n\n\nFinding the Area By The Diameter\n\u00b6\n\n\nvar\n \nshapemathjs\n \n=\n \nrequire\n(\n\"shapemath-js\"\n);\n\n\n\nshapemathjs\n.\ncircle\n.\nareaByDiameter\n(\ndiameter\n);\n\n\n\n\n\n\n\n\ndiameter\n: The diameter of the circle.\n\n\n\n\nReturns the area.\n\n\nFinding the Circumference By The Radius\n\u00b6\n\n\nvar\n \nshapemathjs\n \n=\n \nrequire\n(\n\"shapemath-js\"\n);\n\n\n\nshapemathjs\n.\ncircle\n.\ncircumferenceByRadius\n(\nradius\n);\n\n\n\n\n\n\n\n\nradius\n: The radius of the circle.\n\n\n\n\nReturns the circumference.\n\n\nFinding the Circumference By The Diameter\n\u00b6\n\n\nvar\n \nshapemathjs\n \n=\n \nrequire\n(\n\"shapemath-js\"\n);\n\n\n\nshapemathjs\n.\ncircle\n.\ncircumferenceByDiameter\n(\nradius\n);\n\n\n\n\n\n\n\n\ndiameter\n: The diameter of the circle.\n\n\n\n\nReturns the circumference.",
            "title": "Circle"
        },
        {
            "location": "/2d/circle/#circle",
            "text": "",
            "title": "Circle"
        },
        {
            "location": "/2d/circle/#finding-the-area-by-the-radius",
            "text": "var   shapemathjs   =   require ( \"shapemath-js\" );  shapemathjs . circle . areaByRadius ( radius );    radius : The radius of the circle.   Returns the area.",
            "title": "Finding the Area By The Radius"
        },
        {
            "location": "/2d/circle/#finding-the-area-by-the-diameter",
            "text": "var   shapemathjs   =   require ( \"shapemath-js\" );  shapemathjs . circle . areaByDiameter ( diameter );    diameter : The diameter of the circle.   Returns the area.",
            "title": "Finding the Area By The Diameter"
        },
        {
            "location": "/2d/circle/#finding-the-circumference-by-the-radius",
            "text": "var   shapemathjs   =   require ( \"shapemath-js\" );  shapemathjs . circle . circumferenceByRadius ( radius );    radius : The radius of the circle.   Returns the circumference.",
            "title": "Finding the Circumference By The Radius"
        },
        {
            "location": "/2d/circle/#finding-the-circumference-by-the-diameter",
            "text": "var   shapemathjs   =   require ( \"shapemath-js\" );  shapemathjs . circle . circumferenceByDiameter ( radius );    diameter : The diameter of the circle.   Returns the circumference.",
            "title": "Finding the Circumference By The Diameter"
        },
        {
            "location": "/2d/ellipse/",
            "text": "Ellipse\n\u00b6\n\n\nFinding the Area by the Radiuses\n\u00b6\n\n\nvar\n \nshapemathjs\n \n=\n \nrequire\n(\n\"shapemath-js\"\n);\n\n\n\nshapemath\n.\nellipse\n.\narea\n(\nmajorRadius\n,\n \nminorRadius\n);\n\n\n\n\n\n\n\n\nmajorRadius\n: The measurement of the larger radius.\n\n\nminorRadius\n: The measurement of the smaller radius.\n\n\n\n\nReturns the area.",
            "title": "Ellipse"
        },
        {
            "location": "/2d/ellipse/#ellipse",
            "text": "",
            "title": "Ellipse"
        },
        {
            "location": "/2d/ellipse/#finding-the-area-by-the-radiuses",
            "text": "var   shapemathjs   =   require ( \"shapemath-js\" );  shapemath . ellipse . area ( majorRadius ,   minorRadius );    majorRadius : The measurement of the larger radius.  minorRadius : The measurement of the smaller radius.   Returns the area.",
            "title": "Finding the Area by the Radiuses"
        },
        {
            "location": "/2d/kite/",
            "text": "Kite\n\u00b6\n\n\nFinding the Area by the Diagonals\n\u00b6\n\n\nvar\n \nshapemathjs\n \n=\n \nrequire\n(\n\"shapemath-js\"\n);\n\n\n\nshapemathjs\n.\nkite\n.\nareaByDiagonals\n(\ndiagonal1\n,\n \ndiagonal2\n);\n\n\n\n\n\n\n\n\ndiagonal1\n: The diagonal measurement of one diagonal.\n\n\ndiagonal2\n: The diagonal measurement of the other diagonal.\n\n\n\n\nReturns the area.\n\n\nFinding the Area by Base and Height\n\u00b6\n\n\nvar\n \nshapemathjs\n \n=\n \nrequire\n(\n\"shapemath-js\"\n);\n\n\n\nshapemathjs\n.\nkite\n.\nareaByBaseAndHeight\n(\nbase\n,\n \nheight\n);\n\n\n\n\n\n\n\n\nbase\n: The measurement of the base.\n\n\nheight\n: The measurement of the height.\n\n\n\n\nReturns the area.\n\n\nFinding the Perimeter by the Sides\n\u00b6\n\n\nvar\n \nshapemathjs\n \n=\n \nrequire\n(\n\"shapemath-js\"\n);\n\n\n\nshapemathjs\n.\nkite\n.\nperimeterBySides\n(\nsideLength1\n,\n \nsideLength2\n);\n\n\n\n\n\n\n\n\nsideLength1\n: The measurement of one of the sides.\n\n\nsideLength2\n: The measurement of the the other side.\n\n\n\n\nReturns the perimeter.\n\n\nFinding the Missing Interior Angle\n\u00b6\n\n\nvar\n \nshapemathjs\n \n=\n \nrequire\n(\n\"shapemath-js\"\n);\n\n\n\nshapemathjs\n.\nkite\n.\nmissingInteriorAngle\n(\nangle1\n,\n \nangle2\n,\n \nangle3\n);\n\n\n\n\n\n\n\n\nangle1\n: The degree measurement of one of the angles.\n\n\nangle2\n: The degree measurement of another angle.\n\n\nangle3\n: The degree measurement of the last angle.\n\n\n\n\nReturns the angle measurement of the missing interior angle in degrees.\n\n\nFinding the Missing Exterior Angle\n\u00b6\n\n\nvar\n \nshapemathjs\n \n=\n \nrequire\n(\n\"shapemath-js\"\n);\n\n\n\nshapemathjs\n.\nkite\n.\nmissingExteriorAngle\n(\nangle1\n,\n \nangle2\n,\n \nangle3\n);\n\n\n\n\n\n\n\n\nangle1\n: The degree measurement of one of the angles.\n\n\nangle2\n: The degree measurement of another angle.\n\n\nangle3\n: The degree measurement of the last angle.\n\n\n\n\nReturns the angle measurement of the missing exterior angle in degrees.",
            "title": "Kite"
        },
        {
            "location": "/2d/kite/#kite",
            "text": "",
            "title": "Kite"
        },
        {
            "location": "/2d/kite/#finding-the-area-by-the-diagonals",
            "text": "var   shapemathjs   =   require ( \"shapemath-js\" );  shapemathjs . kite . areaByDiagonals ( diagonal1 ,   diagonal2 );    diagonal1 : The diagonal measurement of one diagonal.  diagonal2 : The diagonal measurement of the other diagonal.   Returns the area.",
            "title": "Finding the Area by the Diagonals"
        },
        {
            "location": "/2d/kite/#finding-the-area-by-base-and-height",
            "text": "var   shapemathjs   =   require ( \"shapemath-js\" );  shapemathjs . kite . areaByBaseAndHeight ( base ,   height );    base : The measurement of the base.  height : The measurement of the height.   Returns the area.",
            "title": "Finding the Area by Base and Height"
        },
        {
            "location": "/2d/kite/#finding-the-perimeter-by-the-sides",
            "text": "var   shapemathjs   =   require ( \"shapemath-js\" );  shapemathjs . kite . perimeterBySides ( sideLength1 ,   sideLength2 );    sideLength1 : The measurement of one of the sides.  sideLength2 : The measurement of the the other side.   Returns the perimeter.",
            "title": "Finding the Perimeter by the Sides"
        },
        {
            "location": "/2d/kite/#finding-the-missing-interior-angle",
            "text": "var   shapemathjs   =   require ( \"shapemath-js\" );  shapemathjs . kite . missingInteriorAngle ( angle1 ,   angle2 ,   angle3 );    angle1 : The degree measurement of one of the angles.  angle2 : The degree measurement of another angle.  angle3 : The degree measurement of the last angle.   Returns the angle measurement of the missing interior angle in degrees.",
            "title": "Finding the Missing Interior Angle"
        },
        {
            "location": "/2d/kite/#finding-the-missing-exterior-angle",
            "text": "var   shapemathjs   =   require ( \"shapemath-js\" );  shapemathjs . kite . missingExteriorAngle ( angle1 ,   angle2 ,   angle3 );    angle1 : The degree measurement of one of the angles.  angle2 : The degree measurement of another angle.  angle3 : The degree measurement of the last angle.   Returns the angle measurement of the missing exterior angle in degrees.",
            "title": "Finding the Missing Exterior Angle"
        },
        {
            "location": "/2d/line/",
            "text": "Line\n\u00b6\n\n\nChecking If Two Lines Are Parallel\n\u00b6\n\n\nvar\n \nshapemathjs\n \n=\n \nrequire\n(\n\"shapemath-js\"\n);\n\n\n\nshapemathjs\n.\nline\n.\nisParallel\n(\nx1\n,\n \ny1\n,\n \nx2\n,\n \ny2\n,\n \nx3\n,\n \ny3\n,\n \nx4\n,\n \ny4\n);\n\n\n\n\n\n\n\n\nx1\n: The x position of point one on line one.\n\n\ny1\n: The y position of point one on line one.\n\n\nx2\n: The x position of point two on line one.\n\n\ny2\n: The y position of point two on line one.\n\n\nx3\n: The x position of point one on line two.\n\n\ny3\n: The y position of point one on line two.\n\n\nx4\n: The x position of point two on line two.\n\n\ny4\n: The y position of point two on line two.\n\n\n\n\nReturns true or false.\n\n\nChecking If Two Lines Are Perpendicular\n\u00b6\n\n\nvar\n \nshapemathjs\n \n=\n \nrequire\n(\n\"shapemath-js\"\n);\n\n\n\nshapemathjs\n.\nline\n.\nisParallel\n(\nslope1\n,\n \nslope2\n);\n\n\n\n\n\n\n\n\nslope1\n: The slope value of line one.\n\n\nslope2\n: The slope value of line two.\n\n\n\n\nReturns true or false.",
            "title": "Line"
        },
        {
            "location": "/2d/line/#line",
            "text": "",
            "title": "Line"
        },
        {
            "location": "/2d/line/#checking-if-two-lines-are-parallel",
            "text": "var   shapemathjs   =   require ( \"shapemath-js\" );  shapemathjs . line . isParallel ( x1 ,   y1 ,   x2 ,   y2 ,   x3 ,   y3 ,   x4 ,   y4 );    x1 : The x position of point one on line one.  y1 : The y position of point one on line one.  x2 : The x position of point two on line one.  y2 : The y position of point two on line one.  x3 : The x position of point one on line two.  y3 : The y position of point one on line two.  x4 : The x position of point two on line two.  y4 : The y position of point two on line two.   Returns true or false.",
            "title": "Checking If Two Lines Are Parallel"
        },
        {
            "location": "/2d/line/#checking-if-two-lines-are-perpendicular",
            "text": "var   shapemathjs   =   require ( \"shapemath-js\" );  shapemathjs . line . isParallel ( slope1 ,   slope2 );    slope1 : The slope value of line one.  slope2 : The slope value of line two.   Returns true or false.",
            "title": "Checking If Two Lines Are Perpendicular"
        },
        {
            "location": "/2d/Oval/",
            "text": "Oval\n\u00b6\n\n\nFinding the Area by the Radiuses\n\u00b6\n\n\nvar\n \nshapemathjs\n \n=\n \nrequire\n(\n\"shapemath-js\"\n);\n\n\n\nshapemath\n.\noval\n.\narea\n(\nmajorRadius\n,\n \nminorRadius\n);\n\n\n\n\n\n\n\n\nmajorRadius\n: The measurement of the larger radius.\n\n\nminorRadius\n: The measurement of the smaller radius.\n\n\n\n\nReturns the area.",
            "title": "Oval"
        },
        {
            "location": "/2d/Oval/#oval",
            "text": "",
            "title": "Oval"
        },
        {
            "location": "/2d/Oval/#finding-the-area-by-the-radiuses",
            "text": "var   shapemathjs   =   require ( \"shapemath-js\" );  shapemath . oval . area ( majorRadius ,   minorRadius );    majorRadius : The measurement of the larger radius.  minorRadius : The measurement of the smaller radius.   Returns the area.",
            "title": "Finding the Area by the Radiuses"
        },
        {
            "location": "/2d/rectangle/",
            "text": "Rectangle\n\u00b6\n\n\nFinding the Area By Width and Height\n\u00b6\n\n\nvar\n \nshapemathjs\n \n=\n \nrequire\n(\n\"shapemath-js\"\n);\n\n\n\nshapemathjs\n.\nrectangle\n.\narea\n(\nwidth\n,\n \nheight\n);\n\n\n\n\n\n\n\n\nwidth\n: The width of the rectangle.\n\n\nheight\n: The height of the rectangle.\n\n\n\n\nReturns the area.\n\n\nFinding the Perimeter By Width and Height\n\u00b6\n\n\nvar\n \nshapemathjs\n \n=\n \nrequire\n(\n\"shapemath-js\"\n);\n\n\n\nshapemathjs\n.\nrectangle\n.\nperimeterBySides\n(\nwidth\n,\n \nheight\n);\n\n\n\n\n\n\n\n\nwidth\n: The width of the rectangle.\n\n\nheight\n: The height of the rectangle.\n\n\n\n\nReturns the area.\n\n\nFinding the Missing Interior Angle\n\u00b6\n\n\nvar\n \nshapemathjs\n \n=\n \nrequire\n(\n\"shapemath-js\"\n);\n\n\n\nshapemathjs\n.\nrectangle\n.\nmissingInteriorAngle\n(\nangle1\n,\n \nangle2\n,\n \nangle3\n);\n\n\n\n\n\n\n\n\nangle1\n: The degree measurement of one of the angles.\n\n\nangle2\n: The degree measurement of another angle.\n\n\nangle3\n: The degree measurement of the last angle.\n\n\n\n\nReturns the angle measurement of the missing interior angle in degrees.\n\n\nFinding the Missing Exterior Angle\n\u00b6\n\n\nvar\n \nshapemathjs\n \n=\n \nrequire\n(\n\"shapemath-js\"\n);\n\n\n\nshapemathjs\n.\nrectangle\n.\nmissingExteriorAngle\n(\nangle1\n,\n \nangle2\n,\n \nangle3\n);\n\n\n\n\n\n\n\n\nangle1\n: The degree measurement of one of the angles.\n\n\nangle2\n: The degree measurement of another angle.\n\n\nangle3\n: The degree measurement of the last angle.\n\n\n\n\nReturns the angle measurement of the missing exterior angle in degrees.",
            "title": "Rectangle"
        },
        {
            "location": "/2d/rectangle/#rectangle",
            "text": "",
            "title": "Rectangle"
        },
        {
            "location": "/2d/rectangle/#finding-the-area-by-width-and-height",
            "text": "var   shapemathjs   =   require ( \"shapemath-js\" );  shapemathjs . rectangle . area ( width ,   height );    width : The width of the rectangle.  height : The height of the rectangle.   Returns the area.",
            "title": "Finding the Area By Width and Height"
        },
        {
            "location": "/2d/rectangle/#finding-the-perimeter-by-width-and-height",
            "text": "var   shapemathjs   =   require ( \"shapemath-js\" );  shapemathjs . rectangle . perimeterBySides ( width ,   height );    width : The width of the rectangle.  height : The height of the rectangle.   Returns the area.",
            "title": "Finding the Perimeter By Width and Height"
        },
        {
            "location": "/2d/rectangle/#finding-the-missing-interior-angle",
            "text": "var   shapemathjs   =   require ( \"shapemath-js\" );  shapemathjs . rectangle . missingInteriorAngle ( angle1 ,   angle2 ,   angle3 );    angle1 : The degree measurement of one of the angles.  angle2 : The degree measurement of another angle.  angle3 : The degree measurement of the last angle.   Returns the angle measurement of the missing interior angle in degrees.",
            "title": "Finding the Missing Interior Angle"
        },
        {
            "location": "/2d/rectangle/#finding-the-missing-exterior-angle",
            "text": "var   shapemathjs   =   require ( \"shapemath-js\" );  shapemathjs . rectangle . missingExteriorAngle ( angle1 ,   angle2 ,   angle3 );    angle1 : The degree measurement of one of the angles.  angle2 : The degree measurement of another angle.  angle3 : The degree measurement of the last angle.   Returns the angle measurement of the missing exterior angle in degrees.",
            "title": "Finding the Missing Exterior Angle"
        },
        {
            "location": "/2d/rhombus/",
            "text": "Rhombus\n\u00b6\n\n\nFinding the Area by the Diagonals\n\u00b6\n\n\nvar\n \nshapemathjs\n \n=\n \nrequire\n(\n\"shapemath-js\"\n);\n\n\n\nshapemathjs\n.\nrhombus\n.\nareaByDiagonals\n(\ndiagonal1\n,\n \ndiagonal2\n);\n\n\n\n\n\n\n\n\ndiagonal1\n: The diagonal measurement of one diagonal.\n\n\ndiagonal2\n: The diagonal measurement of the other diagonal.\n\n\n\n\nReturns the area.\n\n\nFinding the Area By Width and Height\n\u00b6\n\n\nvar\n \nshapemathjs\n \n=\n \nrequire\n(\n\"shapemath-js\"\n);\n\n\n\nshapemathjs\n.\nrhombus\n.\nareaByBaseAndHeight\n(\nwidth\n,\n \nheight\n);\n\n\n\n\n\n\n\n\nwidth\n: The width of the rectangle.\n\n\nheight\n: The height of the rectangle.\n\n\n\n\nReturns the area.\n\n\nFinding the Perimeter By Width and Height\n\u00b6\n\n\nvar\n \nshapemathjs\n \n=\n \nrequire\n(\n\"shapemath-js\"\n);\n\n\n\nshapemathjs\n.\nrhombus\n.\nperimeterBySides\n(\nsideLength1\n,\n \nsideLength2\n);\n\n\n\n\n\n\n\n\nsideLength1\n: The measurement of one of the sides.\n\n\nsideLength2\n: The measurement of the the other side.\n\n\n\n\nReturns the area.\n\n\nFinding the Missing Interior Angle\n\u00b6\n\n\nvar\n \nshapemathjs\n \n=\n \nrequire\n(\n\"shapemath-js\"\n);\n\n\n\nshapemathjs\n.\nrectangle\n.\nmissingInteriorAngle\n(\nangle1\n,\n \nangle2\n,\n \nangle3\n);\n\n\n\n\n\n\n\n\nangle1\n: The degree measurement of one of the angles.\n\n\nangle2\n: The degree measurement of another angle.\n\n\nangle3\n: The degree measurement of the last angle.\n\n\n\n\nReturns the angle measurement of the missing interior angle in degrees.\n\n\nFinding the Missing Exterior Angle\n\u00b6\n\n\nvar\n \nshapemathjs\n \n=\n \nrequire\n(\n\"shapemath-js\"\n);\n\n\n\nshapemathjs\n.\nrectangle\n.\nmissingExteriorAngle\n(\nangle1\n,\n \nangle2\n,\n \nangle3\n);\n\n\n\n\n\n\n\n\nangle1\n: The degree measurement of one of the angles.\n\n\nangle2\n: The degree measurement of another angle.\n\n\nangle3\n: The degree measurement of the last angle.\n\n\n\n\nReturns the angle measurement of the missing exterior angle in degrees.",
            "title": "Rhombus"
        },
        {
            "location": "/2d/rhombus/#rhombus",
            "text": "",
            "title": "Rhombus"
        },
        {
            "location": "/2d/rhombus/#finding-the-area-by-the-diagonals",
            "text": "var   shapemathjs   =   require ( \"shapemath-js\" );  shapemathjs . rhombus . areaByDiagonals ( diagonal1 ,   diagonal2 );    diagonal1 : The diagonal measurement of one diagonal.  diagonal2 : The diagonal measurement of the other diagonal.   Returns the area.",
            "title": "Finding the Area by the Diagonals"
        },
        {
            "location": "/2d/rhombus/#finding-the-area-by-width-and-height",
            "text": "var   shapemathjs   =   require ( \"shapemath-js\" );  shapemathjs . rhombus . areaByBaseAndHeight ( width ,   height );    width : The width of the rectangle.  height : The height of the rectangle.   Returns the area.",
            "title": "Finding the Area By Width and Height"
        },
        {
            "location": "/2d/rhombus/#finding-the-perimeter-by-width-and-height",
            "text": "var   shapemathjs   =   require ( \"shapemath-js\" );  shapemathjs . rhombus . perimeterBySides ( sideLength1 ,   sideLength2 );    sideLength1 : The measurement of one of the sides.  sideLength2 : The measurement of the the other side.   Returns the area.",
            "title": "Finding the Perimeter By Width and Height"
        },
        {
            "location": "/2d/rhombus/#finding-the-missing-interior-angle",
            "text": "var   shapemathjs   =   require ( \"shapemath-js\" );  shapemathjs . rectangle . missingInteriorAngle ( angle1 ,   angle2 ,   angle3 );    angle1 : The degree measurement of one of the angles.  angle2 : The degree measurement of another angle.  angle3 : The degree measurement of the last angle.   Returns the angle measurement of the missing interior angle in degrees.",
            "title": "Finding the Missing Interior Angle"
        },
        {
            "location": "/2d/rhombus/#finding-the-missing-exterior-angle",
            "text": "var   shapemathjs   =   require ( \"shapemath-js\" );  shapemathjs . rectangle . missingExteriorAngle ( angle1 ,   angle2 ,   angle3 );    angle1 : The degree measurement of one of the angles.  angle2 : The degree measurement of another angle.  angle3 : The degree measurement of the last angle.   Returns the angle measurement of the missing exterior angle in degrees.",
            "title": "Finding the Missing Exterior Angle"
        },
        {
            "location": "/2d/semicircle/",
            "text": "Semicircle\n\u00b6\n\n\nFinding the Area By The Radius\n\u00b6\n\n\nvar\n \nshapemathjs\n \n=\n \nrequire\n(\n\"shapemath-js\"\n);\n\n\n\nshapemathjs\n.\nsemicircle\n.\nareaByRadius\n(\nradius\n);\n\n\n\n\n\n\n\n\nradius\n: The radius of the semicircle.\n\n\n\n\nReturns the area.\n\n\nFinding the Area By The Diameter\n\u00b6\n\n\nvar\n \nshapemathjs\n \n=\n \nrequire\n(\n\"shapemath-js\"\n);\n\n\n\nshapemathjs\n.\nsemicircle\n.\nareaByDiameter\n(\ndiameter\n);\n\n\n\n\n\n\n\n\ndiameter\n: The diameter of the semicircle.\n\n\n\n\nReturns the area.\n\n\nFinding the Circumference By The Radius\n\u00b6\n\n\nvar\n \nshapemathjs\n \n=\n \nrequire\n(\n\"shapemath-js\"\n);\n\n\n\nshapemathjs\n.\nsemicircle\n.\ncircumferenceByRadius\n(\nradius\n);\n\n\n\n\n\n\n\n\nradius\n: The radius of the semicircle.\n\n\n\n\nReturns the circumference.\n\n\nFinding the Circumference By The Diameter\n\u00b6\n\n\nvar\n \nshapemathjs\n \n=\n \nrequire\n(\n\"shapemath-js\"\n);\n\n\n\nshapemathjs\n.\nsemicircle\n.\ncircumferenceByDiameter\n(\nradius\n);\n\n\n\n\n\n\n\n\ndiameter\n: The diameter of the semicircle.\n\n\n\n\nReturns the circumference.",
            "title": "Semicircle"
        },
        {
            "location": "/2d/semicircle/#semicircle",
            "text": "",
            "title": "Semicircle"
        },
        {
            "location": "/2d/semicircle/#finding-the-area-by-the-radius",
            "text": "var   shapemathjs   =   require ( \"shapemath-js\" );  shapemathjs . semicircle . areaByRadius ( radius );    radius : The radius of the semicircle.   Returns the area.",
            "title": "Finding the Area By The Radius"
        },
        {
            "location": "/2d/semicircle/#finding-the-area-by-the-diameter",
            "text": "var   shapemathjs   =   require ( \"shapemath-js\" );  shapemathjs . semicircle . areaByDiameter ( diameter );    diameter : The diameter of the semicircle.   Returns the area.",
            "title": "Finding the Area By The Diameter"
        },
        {
            "location": "/2d/semicircle/#finding-the-circumference-by-the-radius",
            "text": "var   shapemathjs   =   require ( \"shapemath-js\" );  shapemathjs . semicircle . circumferenceByRadius ( radius );    radius : The radius of the semicircle.   Returns the circumference.",
            "title": "Finding the Circumference By The Radius"
        },
        {
            "location": "/2d/semicircle/#finding-the-circumference-by-the-diameter",
            "text": "var   shapemathjs   =   require ( \"shapemath-js\" );  shapemathjs . semicircle . circumferenceByDiameter ( radius );    diameter : The diameter of the semicircle.   Returns the circumference.",
            "title": "Finding the Circumference By The Diameter"
        },
        {
            "location": "/2d/square/",
            "text": "Square\n\u00b6\n\n\nFinding the Area By the Square Size\n\u00b6\n\n\nvar\n \nshapemathjs\n \n=\n \nrequire\n(\n\"shapemath-js\"\n);\n\n\n\nshapemathjs\n.\nsquare\n.\narea\n(\nsize\n);\n\n\n\n\n\n\n\n\nsize\n: The size of the square, or one of the side measurements.\n\n\n\n\nFinding the Perimeter By the Square Size\n\u00b6\n\n\nvar\n \nshapemathjs\n \n=\n \nrequire\n(\n\"shapemath-js\"\n);\n\n\n\nshapemathjs\n.\nsquare\n.\nperimeterBySide\n(\nsize\n);\n\n\n\n\n\n\n\n\nsize\n: The size of the square, or one of the side measurements.\n\n\n\n\nFinding the Area By the Perimeter\n\u00b6\n\n\nvar\n \nshapemathjs\n \n=\n \nrequire\n(\n\"shapemath-js\"\n);\n\n\n\nshapemathjs\n.\nsquare\n.\nperimeterByArea\n(\narea\n);\n\n\n\n\n\n\n\n\narea\n: The area of the square.\n\n\n\n\nFinding the Missing Interior Angle\n\u00b6\n\n\nvar\n \nshapemathjs\n \n=\n \nrequire\n(\n\"shapemath-js\"\n);\n\n\n\nshapemathjs\n.\nsquare\n.\nmissingInteriorAngle\n(\nangle1\n,\n \nangle2\n,\n \nangle3\n);\n\n\n\n\n\n\n\n\nangle1\n: The degree measurement of one of the angles.\n\n\nangle2\n: The degree measurement of another angle.\n\n\nangle3\n: The degree measurement of the last angle.\n\n\n\n\nReturns the angle measurement of the missing interior angle in degrees.\n\n\nFinding the Missing Exterior Angle\n\u00b6\n\n\nvar\n \nshapemathjs\n \n=\n \nrequire\n(\n\"shapemath-js\"\n);\n\n\n\nshapemathjs\n.\nsquare\n.\nmissingExteriorAngle\n(\nangle1\n,\n \nangle2\n,\n \nangle3\n);\n\n\n\n\n\n\n\n\nangle1\n: The degree measurement of one of the angles.\n\n\nangle2\n: The degree measurement of another angle.\n\n\nangle3\n: The degree measurement of the last angle.\n\n\n\n\nReturns the angle measurement of the missing exterior angle in degrees.",
            "title": "Square"
        },
        {
            "location": "/2d/square/#square",
            "text": "",
            "title": "Square"
        },
        {
            "location": "/2d/square/#finding-the-area-by-the-square-size",
            "text": "var   shapemathjs   =   require ( \"shapemath-js\" );  shapemathjs . square . area ( size );    size : The size of the square, or one of the side measurements.",
            "title": "Finding the Area By the Square Size"
        },
        {
            "location": "/2d/square/#finding-the-perimeter-by-the-square-size",
            "text": "var   shapemathjs   =   require ( \"shapemath-js\" );  shapemathjs . square . perimeterBySide ( size );    size : The size of the square, or one of the side measurements.",
            "title": "Finding the Perimeter By the Square Size"
        },
        {
            "location": "/2d/square/#finding-the-area-by-the-perimeter",
            "text": "var   shapemathjs   =   require ( \"shapemath-js\" );  shapemathjs . square . perimeterByArea ( area );    area : The area of the square.",
            "title": "Finding the Area By the Perimeter"
        },
        {
            "location": "/2d/square/#finding-the-missing-interior-angle",
            "text": "var   shapemathjs   =   require ( \"shapemath-js\" );  shapemathjs . square . missingInteriorAngle ( angle1 ,   angle2 ,   angle3 );    angle1 : The degree measurement of one of the angles.  angle2 : The degree measurement of another angle.  angle3 : The degree measurement of the last angle.   Returns the angle measurement of the missing interior angle in degrees.",
            "title": "Finding the Missing Interior Angle"
        },
        {
            "location": "/2d/square/#finding-the-missing-exterior-angle",
            "text": "var   shapemathjs   =   require ( \"shapemath-js\" );  shapemathjs . square . missingExteriorAngle ( angle1 ,   angle2 ,   angle3 );    angle1 : The degree measurement of one of the angles.  angle2 : The degree measurement of another angle.  angle3 : The degree measurement of the last angle.   Returns the angle measurement of the missing exterior angle in degrees.",
            "title": "Finding the Missing Exterior Angle"
        },
        {
            "location": "/2d/trapezoid/",
            "text": "Trapezoid\n\u00b6\n\n\nFinding the Area by Bases and Height\n\u00b6\n\n\nvar\n \nshapemathjs\n \n=\n \nrequire\n(\n\"shapemath-js\"\n);\n\n\n\nshapemathjs\n.\ntrapezoid\n.\narea\n(\nbase1\n,\n \nbase2\n,\n \nheight\n);\n\n\n\n\n\n\n\n\nbase1\n: The length of one of the bases.\n\n\nbase2\n: The length of the other base.\n\n\nheight\n: The height of the trapezoid.\n\n\n\n\nFinding the Missing Interior Angle\n\u00b6\n\n\nvar\n \nshapemathjs\n \n=\n \nrequire\n(\n\"shapemath-js\"\n);\n\n\n\nshapemathjs\n.\nsquare\n.\nmissingInteriorAngle\n(\nangle1\n,\n \nangle2\n,\n \nangle3\n);\n\n\n\n\n\n\n\n\nangle1\n: The degree measurement of one of the angles.\n\n\nangle2\n: The degree measurement of another angle.\n\n\nangle3\n: The degree measurement of the last angle.\n\n\n\n\nReturns the angle measurement of the missing interior angle in degrees.\n\n\nFinding the Missing Exterior Angle\n\u00b6\n\n\nvar\n \nshapemathjs\n \n=\n \nrequire\n(\n\"shapemath-js\"\n);\n\n\n\nshapemathjs\n.\nsquare\n.\nmissingExteriorAngle\n(\nangle1\n,\n \nangle2\n,\n \nangle3\n);\n\n\n\n\n\n\n\n\nangle1\n: The degree measurement of one of the angles.\n\n\nangle2\n: The degree measurement of another angle.\n\n\nangle3\n: The degree measurement of the last angle.\n\n\n\n\nReturns the angle measurement of the missing exterior angle in degrees.",
            "title": "Trapezoid"
        },
        {
            "location": "/2d/trapezoid/#trapezoid",
            "text": "",
            "title": "Trapezoid"
        },
        {
            "location": "/2d/trapezoid/#finding-the-area-by-bases-and-height",
            "text": "var   shapemathjs   =   require ( \"shapemath-js\" );  shapemathjs . trapezoid . area ( base1 ,   base2 ,   height );    base1 : The length of one of the bases.  base2 : The length of the other base.  height : The height of the trapezoid.",
            "title": "Finding the Area by Bases and Height"
        },
        {
            "location": "/2d/trapezoid/#finding-the-missing-interior-angle",
            "text": "var   shapemathjs   =   require ( \"shapemath-js\" );  shapemathjs . square . missingInteriorAngle ( angle1 ,   angle2 ,   angle3 );    angle1 : The degree measurement of one of the angles.  angle2 : The degree measurement of another angle.  angle3 : The degree measurement of the last angle.   Returns the angle measurement of the missing interior angle in degrees.",
            "title": "Finding the Missing Interior Angle"
        },
        {
            "location": "/2d/trapezoid/#finding-the-missing-exterior-angle",
            "text": "var   shapemathjs   =   require ( \"shapemath-js\" );  shapemathjs . square . missingExteriorAngle ( angle1 ,   angle2 ,   angle3 );    angle1 : The degree measurement of one of the angles.  angle2 : The degree measurement of another angle.  angle3 : The degree measurement of the last angle.   Returns the angle measurement of the missing exterior angle in degrees.",
            "title": "Finding the Missing Exterior Angle"
        },
        {
            "location": "/2d/triangle/",
            "text": "Triangle\n\u00b6\n\n\nFinding the Area By Base and Height\n\u00b6\n\n\nvar\n \nshapemathjs\n \n=\n \nrequire\n(\n\"shapemath-js\"\n);\n\n\n\nshapemathjs\n.\ntriangle\n.\nareaByBaseAndHeight\n(\nbase\n,\n \nheight\n);\n\n\n\n\n\n\n\n\nbase\n: The length of the base.\n\n\nheight\n: The height of the triangle.\n\n\n\n\nReturns the area.\n\n\nFinding the Area By Sides\n\u00b6\n\n\nvar\n \nshapemathjs\n \n=\n \nrequire\n(\n\"shapemath-js\"\n);\n\n\n\nshapemathjs\n.\ntriangle\n.\nareaBySides\n(\nsideA\n,\n \nsideB\n,\n \nsideC\n);\n\n\n\n\n\n\n\n\nsideA\n: The length of one of the sides.\n\n\nsideB\n: The length of another side.\n\n\nsideC\n: The length of the last side.\n\n\n\n\nReturns the area.\n\n\nFinding the Hypotenuse Measurement\n\u00b6\n\n\nvar\n \nshapemathjs\n \n=\n \nrequire\n(\n\"shapemath-js\"\n);\n\n\n\nshapemathjs\n.\ntriangle\n.\nhypotenuse\n(\nsideLength1\n,\n \nsideLength2\n)\n\n\n\n\n\n\n\n\nsideLength1\n: The length of one of the sides, not the hypotenuse.\n\n\nsideLength2\n: The length of the other side, not the hypotenuse.\n\n\n\n\nReturns the measurement of the hypotenuse.\n\n\nFinding the Missing Side Measurement\n\u00b6\n\n\nvar\n \nshapemathjs\n \n=\n \nrequire\n(\n\"shapemath-js\"\n);\n\n\n\nshapemathjs\n.\ntriangle\n.\nmissingSide\n(\nside\n,\n \nhypotenuse\n);\n\n\n\n\n\n\n\n\nside\n: The length of one of the sides, not the hypotenuse.\n\n\nhypotenuse\n: The length of the hypotenuse.\n\n\n\n\nReturns the measurement of the missing side.\n\n\nFinding the Missing Interior Angle\n\u00b6\n\n\nvar\n \nshapemathjs\n \n=\n \nrequire\n(\n\"shapemath-js\"\n);\n\n\n\nshapemathjs\n.\ntriangle\n.\nmissingInteriorAngle\n(\nangle1\n,\n \nangle2\n,\n \nangle3\n);\n\n\n\n\n\n\n\n\nangle1\n: The degree measurement of one of the angles.\n\n\nangle2\n: The degree measurement of the other angle.\n\n\n\n\nReturns the angle measurement of the missing interior angle in degrees.\n\n\nFinding the Missing Exterior Angle\n\u00b6\n\n\nvar\n \nshapemathjs\n \n=\n \nrequire\n(\n\"shapemath-js\"\n);\n\n\n\nshapemathjs\n.\ntriangle\n.\nmissingExteriorAngle\n(\nangle1\n,\n \nangle2\n,\n \nangle3\n);\n\n\n\n\n\n\n\n\nangle1\n: The degree measurement of one of the angles.\n\n\nangle2\n: The degree measurement of the other angle.\n\n\n\n\nReturns the angle measurement of the missing exterior angle in degrees.",
            "title": "Triangle"
        },
        {
            "location": "/2d/triangle/#triangle",
            "text": "",
            "title": "Triangle"
        },
        {
            "location": "/2d/triangle/#finding-the-area-by-base-and-height",
            "text": "var   shapemathjs   =   require ( \"shapemath-js\" );  shapemathjs . triangle . areaByBaseAndHeight ( base ,   height );    base : The length of the base.  height : The height of the triangle.   Returns the area.",
            "title": "Finding the Area By Base and Height"
        },
        {
            "location": "/2d/triangle/#finding-the-area-by-sides",
            "text": "var   shapemathjs   =   require ( \"shapemath-js\" );  shapemathjs . triangle . areaBySides ( sideA ,   sideB ,   sideC );    sideA : The length of one of the sides.  sideB : The length of another side.  sideC : The length of the last side.   Returns the area.",
            "title": "Finding the Area By Sides"
        },
        {
            "location": "/2d/triangle/#finding-the-hypotenuse-measurement",
            "text": "var   shapemathjs   =   require ( \"shapemath-js\" );  shapemathjs . triangle . hypotenuse ( sideLength1 ,   sideLength2 )    sideLength1 : The length of one of the sides, not the hypotenuse.  sideLength2 : The length of the other side, not the hypotenuse.   Returns the measurement of the hypotenuse.",
            "title": "Finding the Hypotenuse Measurement"
        },
        {
            "location": "/2d/triangle/#finding-the-missing-side-measurement",
            "text": "var   shapemathjs   =   require ( \"shapemath-js\" );  shapemathjs . triangle . missingSide ( side ,   hypotenuse );    side : The length of one of the sides, not the hypotenuse.  hypotenuse : The length of the hypotenuse.   Returns the measurement of the missing side.",
            "title": "Finding the Missing Side Measurement"
        },
        {
            "location": "/2d/triangle/#finding-the-missing-interior-angle",
            "text": "var   shapemathjs   =   require ( \"shapemath-js\" );  shapemathjs . triangle . missingInteriorAngle ( angle1 ,   angle2 ,   angle3 );    angle1 : The degree measurement of one of the angles.  angle2 : The degree measurement of the other angle.   Returns the angle measurement of the missing interior angle in degrees.",
            "title": "Finding the Missing Interior Angle"
        },
        {
            "location": "/2d/triangle/#finding-the-missing-exterior-angle",
            "text": "var   shapemathjs   =   require ( \"shapemath-js\" );  shapemathjs . triangle . missingExteriorAngle ( angle1 ,   angle2 ,   angle3 );    angle1 : The degree measurement of one of the angles.  angle2 : The degree measurement of the other angle.   Returns the angle measurement of the missing exterior angle in degrees.",
            "title": "Finding the Missing Exterior Angle"
        },
        {
            "location": "/3d/cone/",
            "text": "Cone\n\u00b6\n\n\nFinding the Volume by the Radius\n\u00b6\n\n\nvar\n \nshapemathjs\n \n=\n \nrequire\n(\n\"shapemath-js\"\n);\n\n\n\nshapemathjs\n.\ncone\n.\nvolumeByRadius\n(\nradius\n,\n \nheight\n);\n\n\n\n\n\n\n\n\nradius\n: The radius of the base.\n\n\nheight\n: The height of the cone.\n\n\n\n\nReturns the volume.\n\n\nFinding the Volume by the Diameter\n\u00b6\n\n\nvar\n \nshapemathjs\n \n=\n \nrequire\n(\n\"shapemath-js\"\n);\n\n\n\nshapemathjs\n.\ncone\n.\nvolumeByDiameter\n(\ndiameter\n,\n \nheight\n);\n\n\n\n\n\n\n\n\nradius\n: The diameter of the base.\n\n\nheight\n: The height of the cone.\n\n\n\n\nReturns the volume.\n\n\nFinding the Surface Area by the Radius\n\u00b6\n\n\nvar\n \nshapemathjs\n \n=\n \nrequire\n(\n\"shapemath-js\"\n);\n\n\n\nshapemathjs\n.\ncone\n.\nsurfaceAreaByRadius\n(\nradius\n,\n \nheight\n);\n\n\n\n\n\n\n\n\nradius\n: The radius of the base.\n\n\nheight\n: The height of the cone.\n\n\n\n\nReturns the surface area.\n\n\nFinding the Surface Area by the Diameter\n\u00b6\n\n\nvar\n \nshapemathjs\n \n=\n \nrequire\n(\n\"shapemath-js\"\n);\n\n\n\nshapemathjs\n.\ncone\n.\nsurfaceAreaByDiameter\n(\ndiameter\n,\n \nheight\n);\n\n\n\n\n\n\n\n\nradius\n: The diameter of the base.\n\n\nheight\n: The height of the cone.\n\n\n\n\nReturns the surface area.",
            "title": "Cone"
        },
        {
            "location": "/3d/cone/#cone",
            "text": "",
            "title": "Cone"
        },
        {
            "location": "/3d/cone/#finding-the-volume-by-the-radius",
            "text": "var   shapemathjs   =   require ( \"shapemath-js\" );  shapemathjs . cone . volumeByRadius ( radius ,   height );    radius : The radius of the base.  height : The height of the cone.   Returns the volume.",
            "title": "Finding the Volume by the Radius"
        },
        {
            "location": "/3d/cone/#finding-the-volume-by-the-diameter",
            "text": "var   shapemathjs   =   require ( \"shapemath-js\" );  shapemathjs . cone . volumeByDiameter ( diameter ,   height );    radius : The diameter of the base.  height : The height of the cone.   Returns the volume.",
            "title": "Finding the Volume by the Diameter"
        },
        {
            "location": "/3d/cone/#finding-the-surface-area-by-the-radius",
            "text": "var   shapemathjs   =   require ( \"shapemath-js\" );  shapemathjs . cone . surfaceAreaByRadius ( radius ,   height );    radius : The radius of the base.  height : The height of the cone.   Returns the surface area.",
            "title": "Finding the Surface Area by the Radius"
        },
        {
            "location": "/3d/cone/#finding-the-surface-area-by-the-diameter",
            "text": "var   shapemathjs   =   require ( \"shapemath-js\" );  shapemathjs . cone . surfaceAreaByDiameter ( diameter ,   height );    radius : The diameter of the base.  height : The height of the cone.   Returns the surface area.",
            "title": "Finding the Surface Area by the Diameter"
        },
        {
            "location": "/3d/cube/",
            "text": "Cube\n\u00b6\n\n\nFinding the Volume by the Cube Size\n\u00b6\n\n\nvar\n \nshapemathjs\n \n=\n \nrequire\n(\n\"shapemath-js\"\n);\n\n\n\nshapemathjs\n.\ncube\n.\nvolume\n(\nsize\n);\n\n\n\n\n\n\n\n\nsize\n: The length of one of the cube edges.\n\n\n\n\nReturns the volume.\n\n\nFinding the Surface Area by the Cube Size\n\u00b6\n\n\nvar\n \nshapemathjs\n \n=\n \nrequire\n(\n\"shapemath-js\"\n);\n\n\n\nshapemathjs\n.\ncube\n.\nsurfaceArea\n(\nsize\n);\n\n\n\n\n\n\n\n\nsize\n: The length of one of the cube edges.\n\n\n\n\nReturns the surface area.",
            "title": "Cube"
        },
        {
            "location": "/3d/cube/#cube",
            "text": "",
            "title": "Cube"
        },
        {
            "location": "/3d/cube/#finding-the-volume-by-the-cube-size",
            "text": "var   shapemathjs   =   require ( \"shapemath-js\" );  shapemathjs . cube . volume ( size );    size : The length of one of the cube edges.   Returns the volume.",
            "title": "Finding the Volume by the Cube Size"
        },
        {
            "location": "/3d/cube/#finding-the-surface-area-by-the-cube-size",
            "text": "var   shapemathjs   =   require ( \"shapemath-js\" );  shapemathjs . cube . surfaceArea ( size );    size : The length of one of the cube edges.   Returns the surface area.",
            "title": "Finding the Surface Area by the Cube Size"
        },
        {
            "location": "/3d/Cylinder/",
            "text": "Cylinder\n\u00b6\n\n\nFinding the Volume by the Radius\n\u00b6\n\n\nvar\n \nshapemathjs\n \n=\n \nrequire\n(\n\"shapemath-js\"\n);\n\n\n\nshapemathjs\n.\ncylinder\n.\nvolumeByRadius\n(\nradius\n,\n \nheight\n);\n\n\n\n\n\n\n\n\nradius\n: The radius of the cylinder.\n\n\nheight\n: The height of the cylinder.\n\n\n\n\nReturns the volume.\n\n\nFinding the Volume by the Diameter\n\u00b6\n\n\nvar\n \nshapemathjs\n \n=\n \nrequire\n(\n\"shapemath-js\"\n);\n\n\n\nshapemathjs\n.\ncylinder\n.\nvolumeByRadius\n(\ndiameter\n,\n \nheight\n);\n\n\n\n\n\n\n\n\ndiameter\n: The diameter of the cylinder.\n\n\nheight\n: The height of the cylinder.\n\n\n\n\nReturns the volume.\n\n\nFinding the Surface Area by the Radius\n\u00b6\n\n\nvar\n \nshapemathjs\n \n=\n \nrequire\n(\n\"shapemath-js\"\n);\n\n\n\nshapemathjs\n.\ncylinder\n.\nsurfaceAreaByRadius\n(\nradius\n,\n \nheight\n);\n\n\n\n\n\n\n\n\nradius\n: The radius of the cylinder.\n\n\nheight\n: The height of the cylinder.\n\n\n\n\nReturns the surface area.\n\n\nFinding the Surface Area by the Diameter\n\u00b6\n\n\nvar\n \nshapemathjs\n \n=\n \nrequire\n(\n\"shapemath-js\"\n);\n\n\n\nshapemathjs\n.\ncylinder\n.\nsurfaceAreaByDiameter\n(\ndiameter\n,\n \nheight\n);\n\n\n\n\n\n\n\n\ndiameter\n: The diameter of the cylinder.\n\n\nheight\n: The height of the cylinder.\n\n\n\n\nReturns the surface area.",
            "title": "Cylinder"
        },
        {
            "location": "/3d/Cylinder/#cylinder",
            "text": "",
            "title": "Cylinder"
        },
        {
            "location": "/3d/Cylinder/#finding-the-volume-by-the-radius",
            "text": "var   shapemathjs   =   require ( \"shapemath-js\" );  shapemathjs . cylinder . volumeByRadius ( radius ,   height );    radius : The radius of the cylinder.  height : The height of the cylinder.   Returns the volume.",
            "title": "Finding the Volume by the Radius"
        },
        {
            "location": "/3d/Cylinder/#finding-the-volume-by-the-diameter",
            "text": "var   shapemathjs   =   require ( \"shapemath-js\" );  shapemathjs . cylinder . volumeByRadius ( diameter ,   height );    diameter : The diameter of the cylinder.  height : The height of the cylinder.   Returns the volume.",
            "title": "Finding the Volume by the Diameter"
        },
        {
            "location": "/3d/Cylinder/#finding-the-surface-area-by-the-radius",
            "text": "var   shapemathjs   =   require ( \"shapemath-js\" );  shapemathjs . cylinder . surfaceAreaByRadius ( radius ,   height );    radius : The radius of the cylinder.  height : The height of the cylinder.   Returns the surface area.",
            "title": "Finding the Surface Area by the Radius"
        },
        {
            "location": "/3d/Cylinder/#finding-the-surface-area-by-the-diameter",
            "text": "var   shapemathjs   =   require ( \"shapemath-js\" );  shapemathjs . cylinder . surfaceAreaByDiameter ( diameter ,   height );    diameter : The diameter of the cylinder.  height : The height of the cylinder.   Returns the surface area.",
            "title": "Finding the Surface Area by the Diameter"
        },
        {
            "location": "/3d/Hemisphere/",
            "text": "Hemisphere\n\u00b6\n\n\nFinding the Volume by the Radius\n\u00b6\n\n\nvar\n \nshapemathjs\n \n=\n \nrequire\n(\n\"shapemath-js\"\n);\n\n\n\nshapemathjs\n.\nhemisphere\n.\nvolumeByRadius\n(\nradius\n);\n\n\n\n\n\n\n\n\nradius\n: The radius of the hemisphere.\n\n\n\n\nReturns the volume.\n\n\nFinding the Volume by the Diameter\n\u00b6\n\n\nvar\n \nshapemathjs\n \n=\n \nrequire\n(\n\"shapemath-js\"\n);\n\n\n\nshapemathjs\n.\nhemisphere\n.\nvolumeByRadius\n(\ndiameter\n);\n\n\n\n\n\n\n\n\ndiameter\n: The diameter of the hemisphere.\n\n\n\n\nReturns the volume.\n\n\nFinding the Surface Area by the Radius\n\u00b6\n\n\nvar\n \nshapemathjs\n \n=\n \nrequire\n(\n\"shapemath-js\"\n);\n\n\n\nshapemathjs\n.\nhemisphere\n.\nsurfaceAreaByRadius\n(\nradius\n);\n\n\n\n\n\n\n\n\nradius\n: The radius of the hemisphere.\n\n\n\n\nReturns the surface area.\n\n\nFinding the Surface Area by the Diameter\n\u00b6\n\n\nvar\n \nshapemathjs\n \n=\n \nrequire\n(\n\"shapemath-js\"\n);\n\n\n\nshapemathjs\n.\nhemisphere\n.\nsurfaceAreaByDiameter\n(\ndiameter\n);\n\n\n\n\n\n\n\n\ndiameter\n: The diameter of the hemisphere.\n\n\n\n\nReturns the surface area.",
            "title": "Hemisphere"
        },
        {
            "location": "/3d/Hemisphere/#hemisphere",
            "text": "",
            "title": "Hemisphere"
        },
        {
            "location": "/3d/Hemisphere/#finding-the-volume-by-the-radius",
            "text": "var   shapemathjs   =   require ( \"shapemath-js\" );  shapemathjs . hemisphere . volumeByRadius ( radius );    radius : The radius of the hemisphere.   Returns the volume.",
            "title": "Finding the Volume by the Radius"
        },
        {
            "location": "/3d/Hemisphere/#finding-the-volume-by-the-diameter",
            "text": "var   shapemathjs   =   require ( \"shapemath-js\" );  shapemathjs . hemisphere . volumeByRadius ( diameter );    diameter : The diameter of the hemisphere.   Returns the volume.",
            "title": "Finding the Volume by the Diameter"
        },
        {
            "location": "/3d/Hemisphere/#finding-the-surface-area-by-the-radius",
            "text": "var   shapemathjs   =   require ( \"shapemath-js\" );  shapemathjs . hemisphere . surfaceAreaByRadius ( radius );    radius : The radius of the hemisphere.   Returns the surface area.",
            "title": "Finding the Surface Area by the Radius"
        },
        {
            "location": "/3d/Hemisphere/#finding-the-surface-area-by-the-diameter",
            "text": "var   shapemathjs   =   require ( \"shapemath-js\" );  shapemathjs . hemisphere . surfaceAreaByDiameter ( diameter );    diameter : The diameter of the hemisphere.   Returns the surface area.",
            "title": "Finding the Surface Area by the Diameter"
        },
        {
            "location": "/3d/rectangularPrism/",
            "text": "Rectangular Prism\n\u00b6\n\n\nFinding the Volume\n\u00b6\n\n\nvar\n \nshapemathjs\n \n=\n \nrequire\n(\n\"shapemath-js\"\n);\n\n\n\nshapemathjs\n.\nrectangularPrism\n.\nvolume\n(\nlength\n,\n \nwidth\n,\n \nheight\n);\n\n\n\n\n\n\n\n\nlength\n: The length of the rectangular prism. \n\n\nwidth\n: The width of the rectangular prism. \n\n\nheight\n: The height of the rectangular prism. \n\n\n\n\nReturns the volume.\n\n\nFinding the Surface Area\n\u00b6\n\n\nvar\n \nshapemathjs\n \n=\n \nrequire\n(\n\"shapemath-js\"\n);\n\n\n\nshapemathjs\n.\nrectangularPrism\n.\nsurfaceArea\n(\nlength\n,\n \nwidth\n,\n \nheight\n);\n\n\n\n\n\n\n\n\nlength\n: The length of the rectangular prism. \n\n\nwidth\n: The width of the rectangular prism. \n\n\nheight\n: The height of the rectangular prism. \n\n\n\n\nReturns the volume.",
            "title": "Rectangular Prism"
        },
        {
            "location": "/3d/rectangularPrism/#rectangular-prism",
            "text": "",
            "title": "Rectangular Prism"
        },
        {
            "location": "/3d/rectangularPrism/#finding-the-volume",
            "text": "var   shapemathjs   =   require ( \"shapemath-js\" );  shapemathjs . rectangularPrism . volume ( length ,   width ,   height );    length : The length of the rectangular prism.   width : The width of the rectangular prism.   height : The height of the rectangular prism.    Returns the volume.",
            "title": "Finding the Volume"
        },
        {
            "location": "/3d/rectangularPrism/#finding-the-surface-area",
            "text": "var   shapemathjs   =   require ( \"shapemath-js\" );  shapemathjs . rectangularPrism . surfaceArea ( length ,   width ,   height );    length : The length of the rectangular prism.   width : The width of the rectangular prism.   height : The height of the rectangular prism.    Returns the volume.",
            "title": "Finding the Surface Area"
        },
        {
            "location": "/3d/Sphere/",
            "text": "Sphere\n\u00b6\n\n\nHemisphere\n\u00b6\n\n\nFinding the Volume by the Radius\n\u00b6\n\n\nvar\n \nshapemathjs\n \n=\n \nrequire\n(\n\"shapemath-js\"\n);\n\n\n\nshapemathjs\n.\nsphere\n.\nvolumeByRadius\n(\nradius\n);\n\n\n\n\n\n\n\n\nradius\n: The radius of the sphere.\n\n\n\n\nReturns the volume.\n\n\nFinding the Volume by the Diameter\n\u00b6\n\n\nvar\n \nshapemathjs\n \n=\n \nrequire\n(\n\"shapemath-js\"\n);\n\n\n\nshapemathjs\n.\nsphere\n.\nvolumeByRadius\n(\ndiameter\n);\n\n\n\n\n\n\n\n\ndiameter\n: The diameter of the sphere.\n\n\n\n\nReturns the volume.\n\n\nFinding the Surface Area by the Radius\n\u00b6\n\n\nvar\n \nshapemathjs\n \n=\n \nrequire\n(\n\"shapemath-js\"\n);\n\n\n\nshapemathjs\n.\nsphere\n.\nsurfaceAreaByRadius\n(\nradius\n);\n\n\n\n\n\n\n\n\nradius\n: The radius of the sphere.\n\n\n\n\nReturns the surface area.\n\n\nFinding the Surface Area by the Diameter\n\u00b6\n\n\nvar\n \nshapemathjs\n \n=\n \nrequire\n(\n\"shapemath-js\"\n);\n\n\n\nshapemathjs\n.\nsphere\n.\nsurfaceAreaByDiameter\n(\ndiameter\n);\n\n\n\n\n\n\n\n\ndiameter\n: The diameter of the sphere.\n\n\n\n\nReturns the surface area.",
            "title": "Sphere"
        },
        {
            "location": "/3d/Sphere/#sphere",
            "text": "",
            "title": "Sphere"
        },
        {
            "location": "/3d/Sphere/#hemisphere",
            "text": "",
            "title": "Hemisphere"
        },
        {
            "location": "/3d/Sphere/#finding-the-volume-by-the-radius",
            "text": "var   shapemathjs   =   require ( \"shapemath-js\" );  shapemathjs . sphere . volumeByRadius ( radius );    radius : The radius of the sphere.   Returns the volume.",
            "title": "Finding the Volume by the Radius"
        },
        {
            "location": "/3d/Sphere/#finding-the-volume-by-the-diameter",
            "text": "var   shapemathjs   =   require ( \"shapemath-js\" );  shapemathjs . sphere . volumeByRadius ( diameter );    diameter : The diameter of the sphere.   Returns the volume.",
            "title": "Finding the Volume by the Diameter"
        },
        {
            "location": "/3d/Sphere/#finding-the-surface-area-by-the-radius",
            "text": "var   shapemathjs   =   require ( \"shapemath-js\" );  shapemathjs . sphere . surfaceAreaByRadius ( radius );    radius : The radius of the sphere.   Returns the surface area.",
            "title": "Finding the Surface Area by the Radius"
        },
        {
            "location": "/3d/Sphere/#finding-the-surface-area-by-the-diameter",
            "text": "var   shapemathjs   =   require ( \"shapemath-js\" );  shapemathjs . sphere . surfaceAreaByDiameter ( diameter );    diameter : The diameter of the sphere.   Returns the surface area.",
            "title": "Finding the Surface Area by the Diameter"
        },
        {
            "location": "/3d/squarePyramid/",
            "text": "Square Pyramid\n\u00b6\n\n\nFinding the Volume\n\u00b6\n\n\nvar\n \nshapemathjs\n \n=\n \nrequire\n(\n\"shapemath-js\"\n);\n\n\n\nshapemathjs\n.\nsquarePyramid\n.\nvolume\n(\nbaseWidth\n,\n \nbaseHeight\n,\n \nheight\n);\n\n\n\n\n\n\n\n\nbaseWidth\n: The width of the base.\n\n\nbaseHeight\n: The height of the base.\n\n\nheight\n: The height of the pyramid.\n\n\n\n\nReturns the volume.",
            "title": "Square Pyramid"
        },
        {
            "location": "/3d/squarePyramid/#square-pyramid",
            "text": "",
            "title": "Square Pyramid"
        },
        {
            "location": "/3d/squarePyramid/#finding-the-volume",
            "text": "var   shapemathjs   =   require ( \"shapemath-js\" );  shapemathjs . squarePyramid . volume ( baseWidth ,   baseHeight ,   height );    baseWidth : The width of the base.  baseHeight : The height of the base.  height : The height of the pyramid.   Returns the volume.",
            "title": "Finding the Volume"
        },
        {
            "location": "/3d/triangularPrism/",
            "text": "Triangular Prism\n\u00b6\n\n\nFinding the Volume by the Base and Height\n\u00b6\n\n\nvar\n \nshapemathjs\n \n=\n \nrequire\n(\n\"shapemath-js\"\n);\n\n\n\nshapemathjs\n.\ntriangularPrism\n.\nvolumeByBaseAndHeight\n(\nbaseWidth\n,\n \nbaseHeight\n,\n \nheight\n);\n\n\n\n\n\n\n\n\nbaseWidth\n: The width of the base.\n\n\nbaseHeight\n: The height of the base.\n\n\nheight\n: The height of the pyramid.\n\n\n\n\nReturns the volume.\n\n\nFinding the Volume by the Edges\n\u00b6\n\n\nvar\n \nshapemathjs\n \n=\n \nrequire\n(\n\"shapemath-js\"\n);\n\n\n\nshapemathjs\n.\ntriangularPrism\n.\nvolumeByEdges\n(\nedgeA\n,\n \nedgeB\n,\n \nedgeC\n,\n \nheight\n);\n\n\n\n\n\n\n\n\nedgeA\n: The edge length of one of the edges on the base.\n\n\nedgeB\n: The edge length of another one of the edges on the base.\n\n\nedgeC\n: The edge length of the last edge on the base.\n\n\nheight\n: The height of the pyramid.\n\n\n\n\nReturns the volume.\n\n\n\nFinding the Surface Area by the Base and Height\n\u00b6\n\n\nvar\n \nshapemathjs\n \n=\n \nrequire\n(\n\"shapemath-js\"\n);\n\n\n\nshapemathjs\n.\ntriangularPrism\n.\nsurfaceAreaByBaseAndHeight\n(\nbaseWidth\n,\n \nbaseHeight\n,\n \nheight\n);\n\n\n\n\n\n\n\n\nbaseWidth\n: The width of the base.\n\n\nbaseHeight\n: The height of the base.\n\n\nheight\n: The height of the pyramid.\n\n\n\n\nReturns the surface area.\n\n\nFinding the Surface Area by the Edges\n\u00b6\n\n\nvar\n \nshapemathjs\n \n=\n \nrequire\n(\n\"shapemath-js\"\n);\n\n\n\nshapemathjs\n.\ntriangularPrism\n.\nsurfaceAreaByEdges\n(\nedgeA\n,\n \nedgeB\n,\n \nedgeC\n,\n \nheight\n);\n\n\n\n\n\n\n\n\nedgeA\n: The edge length of one of the edges on the base.\n\n\nedgeB\n: The edge length of another one of the edges on the base.\n\n\nedgeC\n: The edge length of the last edge on the base.\n\n\nheight\n: The height of the pyramid.\n\n\n\n\nReturns the surface area.",
            "title": "Triangular Prism"
        },
        {
            "location": "/3d/triangularPrism/#triangular-prism",
            "text": "",
            "title": "Triangular Prism"
        },
        {
            "location": "/3d/triangularPrism/#finding-the-volume-by-the-base-and-height",
            "text": "var   shapemathjs   =   require ( \"shapemath-js\" );  shapemathjs . triangularPrism . volumeByBaseAndHeight ( baseWidth ,   baseHeight ,   height );    baseWidth : The width of the base.  baseHeight : The height of the base.  height : The height of the pyramid.   Returns the volume.",
            "title": "Finding the Volume by the Base and Height"
        },
        {
            "location": "/3d/triangularPrism/#finding-the-volume-by-the-edges",
            "text": "var   shapemathjs   =   require ( \"shapemath-js\" );  shapemathjs . triangularPrism . volumeByEdges ( edgeA ,   edgeB ,   edgeC ,   height );    edgeA : The edge length of one of the edges on the base.  edgeB : The edge length of another one of the edges on the base.  edgeC : The edge length of the last edge on the base.  height : The height of the pyramid.   Returns the volume.",
            "title": "Finding the Volume by the Edges"
        },
        {
            "location": "/3d/triangularPrism/#finding-the-surface-area-by-the-base-and-height",
            "text": "var   shapemathjs   =   require ( \"shapemath-js\" );  shapemathjs . triangularPrism . surfaceAreaByBaseAndHeight ( baseWidth ,   baseHeight ,   height );    baseWidth : The width of the base.  baseHeight : The height of the base.  height : The height of the pyramid.   Returns the surface area.",
            "title": "Finding the Surface Area by the Base and Height"
        },
        {
            "location": "/3d/triangularPrism/#finding-the-surface-area-by-the-edges",
            "text": "var   shapemathjs   =   require ( \"shapemath-js\" );  shapemathjs . triangularPrism . surfaceAreaByEdges ( edgeA ,   edgeB ,   edgeC ,   height );    edgeA : The edge length of one of the edges on the base.  edgeB : The edge length of another one of the edges on the base.  edgeC : The edge length of the last edge on the base.  height : The height of the pyramid.   Returns the surface area.",
            "title": "Finding the Surface Area by the Edges"
        }
    ]
}